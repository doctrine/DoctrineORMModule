name: "Continuous Integration"

on:
  pull_request:
    branches:
      - "*.x"
  push:
    branches:
      - "*.x"

jobs:
  phpunit:
    name: "PHPUnit"
    runs-on: "ubuntu-20.04"

    strategy:
      fail-fast: false
      matrix:
        php-version:
          - "8.0"
          - "8.1"
          - "8.2"
        dbal-version:
          - "2.13.0"
          - "3.3.0"
        dependencies:
          - "highest"
        optional-dependencies:
          - true
          - false
        include:
          - php-version: "8.0"
            dbal-version: "2.13.0"
            dependencies: "lowest"
            optional-dependencies: false
          - php-version: "8.0"
            dbal-version: "3.3.0"
            dependencies: "lowest"
            optional-dependencies: false
          - php-version: "8.0"
            dbal-version: "2.13.0"
            dependencies: "lowest"
            optional-dependencies: true
          - php-version: "8.0"
            dbal-version: "3.3.0"
            dependencies: "lowest"
            optional-dependencies: true

    services:
      mysql:
        image: "mysql:8.0"

        options: >-
          --health-cmd "mysqladmin ping --silent"
          -e MYSQL_ALLOW_EMPTY_PASSWORD=yes
          -e MYSQL_DATABASE=database

        ports:
          - "3306:3306"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v2"
        with:
          fetch-depth: 2

      - name: "Install PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          php-version: "${{ matrix.php-version }}"
          coverage: "pcov"
          ini-values: "error_reporting=E_ALL, zend.assertions=1"
          extensions: "pdo_mysql"

      - name: "Require specific DBAL version"
        run: "composer require doctrine/dbal ^${{ matrix.dbal-version }} --no-update"

      - name: "Install dependencies with Composer"
        uses: "ramsey/composer-install@v1"
        with:
          dependency-versions: "${{ matrix.dependencies }}"
          composer-options: "--prefer-dist --no-suggest"

      - name: "Remove optional dependencies"
        if: "! matrix.optional-dependencies"
        run: "composer remove --dev doctrine/data-fixtures doctrine/migrations"

      - name: "Configure test application"
        run: "cp ci/config/application.config.php config/application.config.php"

      - name: "Run PHPUnit"
        run: "vendor/bin/phpunit --coverage-clover=coverage.xml"

      - name: "Run CLI commands"
        run: "./ci/run-cli.sh"

      - name: "Run migration CLI commands"
        if: "${{ matrix.optional-dependencies }}"
        run: "./ci/run-cli-migrations.sh"

      - name: "Upload coverage file"
        uses: "actions/upload-artifact@v2"
        with:
          name: "phpunit-${{ matrix.php-version }}-${{ matrix.dependencies }}-${{ matrix.dbal-version }}.coverage"
          path: "coverage.xml"

  upload_coverage:
    name: "Upload coverage to Codecov"
    runs-on: "ubuntu-20.04"
    needs:
      - "phpunit"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v2"
        with:
          fetch-depth: 2

      - name: "Download coverage files"
        uses: "actions/download-artifact@v2"
        with:
          path: "reports"

      - name: "Upload to Codecov"
        uses: "codecov/codecov-action@v1"
        with:
          directory: "reports"
